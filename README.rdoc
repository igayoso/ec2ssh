= EC2ssh

A script to make it easier to ssh into running amazon EC2 instances.

Since ec2 instance public hostnames are dynamic, and not easy to remember or type, this script provides a list all your running instances so you can select the one you want to ssh into easily (without having to pass the aws console ritual each time you need the hostname).

You can configure several accounts, customize the action to run on the selected instance and restrict the list to only the regions you want.

You can customize *EC2ssh* behaviour using the <tt>~/.ec2ssh</tt> yaml config file. A sample file will be created on first run if it doesn't already exist.

Invocation examples:

  # Using the default account
  ec2ssh
  # To use the second account
  ec2ssh second
  # To filter by tag
  ec2ssh -t production
  # To filter by private IP address 
  ec2ssh -p 10.10.10.10
  # To filter by security group 
  ec2ssh -s default

Example menu:

  0. i-5e523428:  gandalf webserver ec2-79-165-69-177.eu-west-1.compute.amazonaws.com 10.34.161.45
  1. i-5e653429:  frodo   database  ec2-45-134-69-185.eu-west-1.compute.amazonaws.com 10.45.24.2

Columns in order: <tt>instance id</tt>, <tt>Name Tag</tt>, <tt>security groups</tt>, <tt>dns_name</tt>, <tt>private_ip_address</tt>.

== Contributing to ec2ssh

* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Ramon Salvad√≥. See LICENSE.txt for
further details.

